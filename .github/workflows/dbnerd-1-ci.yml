name: DBNerd-1 CI/CD

on:
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Execute tests
        env:
          DBNERD_DB_NAME: ${{ secrets.MYSQL_TEST_DB }}
          DBNERD_MYSQL_USER: ${{ secrets.MYSQL_TEST_USER }}
          DBNERD_MYSQL_PASSWORD: ${{ secrets.MYSQL_TEST_PASSWORD }}
          DBNERD_MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_TEST_PASSWORD }}
          DBNERD_MYSQL_URL: jdbc:mysql://mysql-db:3306/${{ secrets.MYSQL_TEST_DB }}
        run: |
          docker-compose -f docker-compose.test.yml run mvn-test
  mysql-db-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Build mysql-db image
        run: |
          docker build mysql-db -f mysql-db/Dockerfile -t ${{ secrets.AZURE_DBNERD_REGISTRY }}/mysql-db:latest
      - name: Login to Azure container registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_DBNERD_REGISTRY }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
      - name: Push mysql-db image to Azure container registry
        run: |
          docker push ${{ secrets.AZURE_DBNERD_REGISTRY }}/mysql-db:latest
  app-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Build app image
        run: |
          docker build dbnerd-1 -f Dockerfile.ci -t ${{ secrets.AZURE_DBNERD_REGISTRY }}/dbnerd-1:latest
      - name: Login to Azure container registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_DBNERD_REGISTRY }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
      - name: Push dbnerd-1 image to Azure container registry
        run: |
          docker push ${{ secrets.AZURE_DBNERD_REGISTRY }}/dbnerd-1:latest
  deploy:
    needs: [app-build, mysql-db-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Deploy to server
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan dbnerd-ci.westeurope.cloudapp.azure.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.DEPLOY_SERVER_PRIVATE_KEY }}"
          git push ${{ secrets.DEPLOY_SERVER_REPO }}
